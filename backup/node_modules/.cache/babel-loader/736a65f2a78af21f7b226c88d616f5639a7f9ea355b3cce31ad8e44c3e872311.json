{"ast":null,"code":"import dateutil from './dateutil';\nimport IterResult from './iterresult';\nimport CallbackIterResult from './callbackiterresult';\nimport { Frequency } from './types';\nimport { parseOptions, initializeOptions } from './parseoptions';\nimport { parseString } from './parsestring';\nimport { optionsToString } from './optionstostring';\nimport { Cache } from './cache';\nimport { Weekday } from './weekday';\nimport { iter } from './iter/index';\nvar getnlp = function () {\n  // Lazy, runtime import to avoid circular refs.\n  if (!getnlp._nlp) {\n    getnlp._nlp = require('./nlp');\n  }\n  return getnlp._nlp;\n};\n// =============================================================================\n// RRule\n// =============================================================================\nexport var Days = {\n  MO: new Weekday(0),\n  TU: new Weekday(1),\n  WE: new Weekday(2),\n  TH: new Weekday(3),\n  FR: new Weekday(4),\n  SA: new Weekday(5),\n  SU: new Weekday(6)\n};\nexport var DEFAULT_OPTIONS = {\n  freq: Frequency.YEARLY,\n  dtstart: null,\n  interval: 1,\n  wkst: Days.MO,\n  count: null,\n  until: null,\n  tzid: null,\n  bysetpos: null,\n  bymonth: null,\n  bymonthday: null,\n  bynmonthday: null,\n  byyearday: null,\n  byweekno: null,\n  byweekday: null,\n  bynweekday: null,\n  byhour: null,\n  byminute: null,\n  bysecond: null,\n  byeaster: null\n};\nexport var defaultKeys = Object.keys(DEFAULT_OPTIONS);\n/**\n *\n * @param {Options?} options - see <http://labix.org/python-dateutil/#head-cf004ee9a75592797e076752b2a889c10f445418>\n *        The only required option is `freq`, one of RRule.YEARLY, RRule.MONTHLY, ...\n * @constructor\n */\nvar RRule = /** @class */function () {\n  function RRule(options, noCache) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (noCache === void 0) {\n      noCache = false;\n    }\n    // RFC string\n    this._cache = noCache ? null : new Cache();\n    // used by toString()\n    this.origOptions = initializeOptions(options);\n    var parsedOptions = parseOptions(options).parsedOptions;\n    this.options = parsedOptions;\n  }\n  RRule.parseText = function (text, language) {\n    return getnlp().parseText(text, language);\n  };\n  RRule.fromText = function (text, language) {\n    return getnlp().fromText(text, language);\n  };\n  RRule.fromString = function (str) {\n    return new RRule(RRule.parseString(str) || undefined);\n  };\n  RRule.prototype._iter = function (iterResult) {\n    return iter(iterResult, this.options);\n  };\n  RRule.prototype._cacheGet = function (what, args) {\n    if (!this._cache) return false;\n    return this._cache._cacheGet(what, args);\n  };\n  RRule.prototype._cacheAdd = function (what, value, args) {\n    if (!this._cache) return;\n    return this._cache._cacheAdd(what, value, args);\n  };\n  /**\n   * @param {Function} iterator - optional function that will be called\n   *                   on each date that is added. It can return false\n   *                   to stop the iteration.\n   * @return Array containing all recurrences.\n   */\n  RRule.prototype.all = function (iterator) {\n    if (iterator) {\n      return this._iter(new CallbackIterResult('all', {}, iterator));\n    }\n    var result = this._cacheGet('all');\n    if (result === false) {\n      result = this._iter(new IterResult('all', {}));\n      this._cacheAdd('all', result);\n    }\n    return result;\n  };\n  /**\n   * Returns all the occurrences of the rrule between after and before.\n   * The inc keyword defines what happens if after and/or before are\n   * themselves occurrences. With inc == True, they will be included in the\n   * list, if they are found in the recurrence set.\n   * @return Array\n   */\n  RRule.prototype.between = function (after, before, inc, iterator) {\n    if (inc === void 0) {\n      inc = false;\n    }\n    if (!dateutil.isValidDate(after) || !dateutil.isValidDate(before)) throw new Error('Invalid date passed in to RRule.between');\n    var args = {\n      before: before,\n      after: after,\n      inc: inc\n    };\n    if (iterator) {\n      return this._iter(new CallbackIterResult('between', args, iterator));\n    }\n    var result = this._cacheGet('between', args);\n    if (result === false) {\n      result = this._iter(new IterResult('between', args));\n      this._cacheAdd('between', result, args);\n    }\n    return result;\n  };\n  /**\n   * Returns the last recurrence before the given datetime instance.\n   * The inc keyword defines what happens if dt is an occurrence.\n   * With inc == True, if dt itself is an occurrence, it will be returned.\n   * @return Date or null\n   */\n  RRule.prototype.before = function (dt, inc) {\n    if (inc === void 0) {\n      inc = false;\n    }\n    if (!dateutil.isValidDate(dt)) throw new Error('Invalid date passed in to RRule.before');\n    var args = {\n      dt: dt,\n      inc: inc\n    };\n    var result = this._cacheGet('before', args);\n    if (result === false) {\n      result = this._iter(new IterResult('before', args));\n      this._cacheAdd('before', result, args);\n    }\n    return result;\n  };\n  /**\n   * Returns the first recurrence after the given datetime instance.\n   * The inc keyword defines what happens if dt is an occurrence.\n   * With inc == True, if dt itself is an occurrence, it will be returned.\n   * @return Date or null\n   */\n  RRule.prototype.after = function (dt, inc) {\n    if (inc === void 0) {\n      inc = false;\n    }\n    if (!dateutil.isValidDate(dt)) throw new Error('Invalid date passed in to RRule.after');\n    var args = {\n      dt: dt,\n      inc: inc\n    };\n    var result = this._cacheGet('after', args);\n    if (result === false) {\n      result = this._iter(new IterResult('after', args));\n      this._cacheAdd('after', result, args);\n    }\n    return result;\n  };\n  /**\n   * Returns the number of recurrences in this set. It will have go trough\n   * the whole recurrence, if this hasn't been done before.\n   */\n  RRule.prototype.count = function () {\n    return this.all().length;\n  };\n  /**\n   * Converts the rrule into its string representation\n   * @see <http://www.ietf.org/rfc/rfc2445.txt>\n   * @return String\n   */\n  RRule.prototype.toString = function () {\n    return optionsToString(this.origOptions);\n  };\n  /**\n   * Will convert all rules described in nlp:ToText\n   * to text.\n   */\n  RRule.prototype.toText = function (gettext, language, dateFormatter) {\n    return getnlp().toText(this, gettext, language, dateFormatter);\n  };\n  RRule.prototype.isFullyConvertibleToText = function () {\n    return getnlp().isFullyConvertible(this);\n  };\n  /**\n   * @return a RRule instance with the same freq and options\n   *          as this one (cache is not cloned)\n   */\n  RRule.prototype.clone = function () {\n    return new RRule(this.origOptions);\n  };\n  // RRule class 'constants'\n  RRule.FREQUENCIES = ['YEARLY', 'MONTHLY', 'WEEKLY', 'DAILY', 'HOURLY', 'MINUTELY', 'SECONDLY'];\n  RRule.YEARLY = Frequency.YEARLY;\n  RRule.MONTHLY = Frequency.MONTHLY;\n  RRule.WEEKLY = Frequency.WEEKLY;\n  RRule.DAILY = Frequency.DAILY;\n  RRule.HOURLY = Frequency.HOURLY;\n  RRule.MINUTELY = Frequency.MINUTELY;\n  RRule.SECONDLY = Frequency.SECONDLY;\n  RRule.MO = Days.MO;\n  RRule.TU = Days.TU;\n  RRule.WE = Days.WE;\n  RRule.TH = Days.TH;\n  RRule.FR = Days.FR;\n  RRule.SA = Days.SA;\n  RRule.SU = Days.SU;\n  RRule.parseString = parseString;\n  RRule.optionsToString = optionsToString;\n  return RRule;\n}();\nexport default RRule;","map":{"version":3,"names":["dateutil","IterResult","CallbackIterResult","Frequency","parseOptions","initializeOptions","parseString","optionsToString","Cache","Weekday","iter","getnlp","_nlp","require","Days","MO","TU","WE","TH","FR","SA","SU","DEFAULT_OPTIONS","freq","YEARLY","dtstart","interval","wkst","count","until","tzid","bysetpos","bymonth","bymonthday","bynmonthday","byyearday","byweekno","byweekday","bynweekday","byhour","byminute","bysecond","byeaster","defaultKeys","Object","keys","RRule","options","noCache","_cache","origOptions","parsedOptions","parseText","text","language","fromText","fromString","str","undefined","prototype","_iter","iterResult","_cacheGet","what","args","_cacheAdd","value","all","iterator","result","between","after","before","inc","isValidDate","Error","dt","length","toString","toText","gettext","dateFormatter","isFullyConvertibleToText","isFullyConvertible","clone","FREQUENCIES","MONTHLY","WEEKLY","DAILY","HOURLY","MINUTELY","SECONDLY"],"sources":["../../../src/rrule.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}