{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/JustClimbApp/class-management/src/pages/Students.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Grid, Chip } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { Grid as DataGrid, Table, TableHeaderRow, TableEditColumn, PagingPanel } from '@devexpress/dx-react-grid-material-ui';\nimport { PagingState, IntegratedPaging, SortingState, IntegratedSorting, DataTypeProvider } from '@devexpress/dx-react-grid';\nimport { studentsApi, classesApi } from '../services/api';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Date formatter\nconst DateFormatter = ({\n  value\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: value ? new Date(value).toLocaleDateString() : ''\n}, void 0, false);\n_c = DateFormatter;\nconst DateTypeProvider = props => /*#__PURE__*/_jsxDEV(DataTypeProvider, {\n  formatterComponent: DateFormatter,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\n// Classes formatter\n_c2 = DateTypeProvider;\nconst ClassesFormatter = ({\n  value,\n  classes\n}) => {\n  if (!value || !Array.isArray(value) || value.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: \"No classes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: 0.5\n    },\n    children: value.map(classId => {\n      const classItem = classes.find(c => c.id === classId);\n      return classItem ? /*#__PURE__*/_jsxDEV(Chip, {\n        label: classItem.name,\n        size: \"small\",\n        sx: {\n          fontSize: '0.75rem'\n        }\n      }, classId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ClassesFormatter;\nconst ClassesTypeProvider = ({\n  classes,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(DataTypeProvider, {\n  formatterComponent: formatterProps => /*#__PURE__*/_jsxDEV(ClassesFormatter, {\n    classes: classes,\n    ...formatterProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 45\n  }, this),\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this);\n_c4 = ClassesTypeProvider;\nconst StudentsPage = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [currentStudent, setCurrentStudent] = useState(null);\n  const [isNew, setIsNew] = useState(true);\n  const [selectedClasses, setSelectedClasses] = useState([]);\n\n  // Grid columns\n  const columns = [{\n    name: 'id',\n    title: 'ID'\n  }, {\n    name: 'firstName',\n    title: 'First Name'\n  }, {\n    name: 'lastName',\n    title: 'Last Name'\n  }, {\n    name: 'email',\n    title: 'Email'\n  }, {\n    name: 'phone',\n    title: 'Phone'\n  }, {\n    name: 'enrollmentDate',\n    title: 'Enrollment Date'\n  }, {\n    name: 'classes',\n    title: 'Classes'\n  }];\n  const dateColumns = ['enrollmentDate'];\n  const classesColumns = ['classes'];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [studentsData, classesData] = await Promise.all([studentsApi.getAll(), classesApi.getAll()]);\n        setStudents(studentsData);\n        setClasses(classesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddStudent = () => {\n    setIsNew(true);\n    setCurrentStudent({\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      enrollmentDate: new Date(),\n      classes: []\n    });\n    setSelectedClasses([]);\n    setShowForm(true);\n  };\n  const handleEditStudent = id => {\n    const studentToEdit = students.find(s => s.id === id);\n    if (studentToEdit) {\n      setIsNew(false);\n      setCurrentStudent({\n        ...studentToEdit\n      });\n      setSelectedClasses([...studentToEdit.classes]);\n      setShowForm(true);\n    }\n  };\n  const handleDeleteStudent = async id => {\n    if (window.confirm('Are you sure you want to delete this student?')) {\n      try {\n        const success = await studentsApi.delete(id);\n        if (success) {\n          setStudents(students.filter(s => s.id !== id));\n        } else {\n          alert('Failed to delete the student');\n        }\n      } catch (error) {\n        console.error('Error deleting student:', error);\n        alert('Error deleting the student');\n      }\n    }\n  };\n  const handleFormSubmit = async () => {\n    if (!currentStudent) return;\n\n    // Update the classes array with selected classes\n    const studentData = {\n      ...currentStudent,\n      classes: selectedClasses\n    };\n    try {\n      if (isNew) {\n        // Create new student\n        const newStudent = await studentsApi.create(studentData);\n        setStudents([...students, newStudent]);\n      } else {\n        // Update existing student\n        const updatedStudent = await studentsApi.update(studentData.id, studentData);\n        if (updatedStudent) {\n          setStudents(students.map(s => s.id === updatedStudent.id ? updatedStudent : s));\n        }\n      }\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error saving student:', error);\n      alert('Error saving the student');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentStudent(prev => {\n      if (name === 'enrollmentDate') {\n        return {\n          ...prev,\n          [name]: new Date(value)\n        };\n      }\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  const handleClassToggle = classId => {\n    if (selectedClasses.includes(classId)) {\n      setSelectedClasses(selectedClasses.filter(id => id !== classId));\n    } else {\n      setSelectedClasses([...selectedClasses, classId]);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading students data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Students Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 22\n        }, this),\n        onClick: handleAddStudent,\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: students,\n        columns: columns,\n        children: [/*#__PURE__*/_jsxDEV(SortingState, {\n          defaultSorting: [{\n            columnName: 'lastName',\n            direction: 'asc'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntegratedSorting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PagingState, {\n          defaultCurrentPage: 0,\n          pageSize: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntegratedPaging, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateTypeProvider, {\n          for: dateColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClassesTypeProvider, {\n          for: classesColumns,\n          classes: classes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderRow, {\n          showSortingControls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableEditColumn, {\n          showEditCommand: true,\n          showDeleteCommand: true,\n          commandComponent: ({\n            id,\n            onExecute\n          }) => {\n            const handleClick = () => {\n              if (id === 'edit') {\n                const rowId = onExecute();\n                handleEditStudent(rowId);\n              } else if (id === 'delete') {\n                const rowId = onExecute();\n                handleDeleteStudent(rowId);\n              }\n            };\n            return /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: id === 'delete' ? 'error' : 'primary',\n              onClick: handleClick,\n              startIcon: id === 'edit' ? /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 61\n              }, this),\n              children: id === 'edit' ? 'Edit' : 'Delete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PagingPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showForm,\n      onClose: () => setShowForm(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: isNew ? 'Add New Student' : 'Edit Student'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"First Name\",\n              name: \"firstName\",\n              value: (currentStudent === null || currentStudent === void 0 ? void 0 : currentStudent.firstName) || '',\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Last Name\",\n              name: \"lastName\",\n              value: (currentStudent === null || currentStudent === void 0 ? void 0 : currentStudent.lastName) || '',\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Email\",\n              name: \"email\",\n              type: \"email\",\n              value: (currentStudent === null || currentStudent === void 0 ? void 0 : currentStudent.email) || '',\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Phone\",\n              name: \"phone\",\n              value: (currentStudent === null || currentStudent === void 0 ? void 0 : currentStudent.phone) || '',\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Enrollment Date\",\n              name: \"enrollmentDate\",\n              type: \"date\",\n              value: currentStudent !== null && currentStudent !== void 0 && currentStudent.enrollmentDate ? new Date(currentStudent.enrollmentDate).toISOString().slice(0, 10) : '',\n              onChange: handleInputChange,\n              InputLabelProps: {\n                shrink: true\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Enrolled Classes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1\n              },\n              children: classes.map(classItem => /*#__PURE__*/_jsxDEV(Chip, {\n                label: classItem.name,\n                color: selectedClasses.includes(classItem.id) ? 'primary' : 'default',\n                onClick: () => handleClassToggle(classItem.id),\n                sx: {\n                  margin: 0.5\n                }\n              }, classItem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowForm(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleFormSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: !(currentStudent !== null && currentStudent !== void 0 && currentStudent.firstName) || !(currentStudent !== null && currentStudent !== void 0 && currentStudent.lastName) || !(currentStudent !== null && currentStudent !== void 0 && currentStudent.email),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentsPage, \"MaHA59owc2kaY6wRbVQIvBvDuoM=\");\n_c5 = StudentsPage;\nexport default StudentsPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DateFormatter\");\n$RefreshReg$(_c2, \"DateTypeProvider\");\n$RefreshReg$(_c3, \"ClassesFormatter\");\n$RefreshReg$(_c4, \"ClassesTypeProvider\");\n$RefreshReg$(_c5, \"StudentsPage\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Paper","Box","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Grid","Chip","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","DataGrid","Table","TableHeaderRow","TableEditColumn","PagingPanel","PagingState","IntegratedPaging","SortingState","IntegratedSorting","DataTypeProvider","studentsApi","classesApi","Fragment","_Fragment","jsxDEV","_jsxDEV","DateFormatter","value","children","Date","toLocaleDateString","_c","DateTypeProvider","props","formatterComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c2","ClassesFormatter","classes","Array","isArray","length","variant","sx","display","flexWrap","gap","map","classId","classItem","find","c","id","label","name","size","fontSize","_c3","ClassesTypeProvider","formatterProps","_c4","StudentsPage","_s","students","setStudents","setClasses","loading","setLoading","showForm","setShowForm","currentStudent","setCurrentStudent","isNew","setIsNew","selectedClasses","setSelectedClasses","columns","title","dateColumns","classesColumns","fetchData","studentsData","classesData","Promise","all","getAll","error","console","handleAddStudent","firstName","lastName","email","phone","enrollmentDate","handleEditStudent","studentToEdit","s","handleDeleteStudent","window","confirm","success","delete","filter","alert","handleFormSubmit","studentData","newStudent","create","updatedStudent","update","handleInputChange","e","target","prev","handleClassToggle","includes","justifyContent","alignItems","mb","component","color","startIcon","onClick","rows","defaultSorting","columnName","direction","defaultCurrentPage","pageSize","for","showSortingControls","showEditCommand","showDeleteCommand","commandComponent","onExecute","handleClick","rowId","open","onClose","maxWidth","fullWidth","container","spacing","mt","item","xs","sm","onChange","required","type","toISOString","slice","InputLabelProps","shrink","gutterBottom","margin","disabled","_c5","$RefreshReg$"],"sources":["/Users/apple/Desktop/JustClimbApp/class-management/src/pages/Students.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Grid, Chip } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport {\n  Grid as DataGrid,\n  Table,\n  TableHeaderRow,\n  TableEditRow,\n  TableEditColumn,\n  PagingPanel,\n} from '@devexpress/dx-react-grid-material-ui';\nimport {\n  PagingState,\n  IntegratedPaging,\n  SortingState,\n  IntegratedSorting,\n  DataTypeProvider,\n  DataTypeProviderProps,\n} from '@devexpress/dx-react-grid';\nimport { studentsApi, classesApi } from '../services/api';\nimport { Student, Class } from '../types';\n\n// Date formatter\nconst DateFormatter = ({ value }: DataTypeProvider.ValueFormatterProps) => (\n  <>{value ? new Date(value).toLocaleDateString() : ''}</>\n);\n\nconst DateTypeProvider = (props: DataTypeProviderProps) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\n// Classes formatter\nconst ClassesFormatter = ({ value, classes }: DataTypeProvider.ValueFormatterProps & { classes: Class[] }) => {\n  if (!value || !Array.isArray(value) || value.length === 0) {\n    return <Typography variant=\"body2\">No classes</Typography>;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n      {value.map((classId: number) => {\n        const classItem = classes.find(c => c.id === classId);\n        return classItem ? (\n          <Chip\n            key={classId}\n            label={classItem.name}\n            size=\"small\"\n            sx={{ fontSize: '0.75rem' }}\n          />\n        ) : null;\n      })}\n    </Box>\n  );\n};\n\nconst ClassesTypeProvider = ({ classes, ...props }: DataTypeProviderProps & { classes: Class[] }) => (\n  <DataTypeProvider\n    formatterComponent={(formatterProps) => <ClassesFormatter classes={classes} {...formatterProps} />}\n    {...props}\n  />\n);\n\nconst StudentsPage: React.FC = () => {\n  const [students, setStudents] = useState<Student[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [currentStudent, setCurrentStudent] = useState<Partial<Student> | null>(null);\n  const [isNew, setIsNew] = useState(true);\n  const [selectedClasses, setSelectedClasses] = useState<number[]>([]);\n\n  // Grid columns\n  const columns = [\n    { name: 'id', title: 'ID' },\n    { name: 'firstName', title: 'First Name' },\n    { name: 'lastName', title: 'Last Name' },\n    { name: 'email', title: 'Email' },\n    { name: 'phone', title: 'Phone' },\n    { name: 'enrollmentDate', title: 'Enrollment Date' },\n    { name: 'classes', title: 'Classes' },\n  ];\n\n  const dateColumns = ['enrollmentDate'];\n  const classesColumns = ['classes'];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [studentsData, classesData] = await Promise.all([\n          studentsApi.getAll(),\n          classesApi.getAll()\n        ]);\n        setStudents(studentsData);\n        setClasses(classesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAddStudent = () => {\n    setIsNew(true);\n    setCurrentStudent({\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      enrollmentDate: new Date(),\n      classes: []\n    });\n    setSelectedClasses([]);\n    setShowForm(true);\n  };\n\n  const handleEditStudent = (id: number) => {\n    const studentToEdit = students.find(s => s.id === id);\n    if (studentToEdit) {\n      setIsNew(false);\n      setCurrentStudent({ ...studentToEdit });\n      setSelectedClasses([...studentToEdit.classes]);\n      setShowForm(true);\n    }\n  };\n\n  const handleDeleteStudent = async (id: number) => {\n    if (window.confirm('Are you sure you want to delete this student?')) {\n      try {\n        const success = await studentsApi.delete(id);\n        if (success) {\n          setStudents(students.filter(s => s.id !== id));\n        } else {\n          alert('Failed to delete the student');\n        }\n      } catch (error) {\n        console.error('Error deleting student:', error);\n        alert('Error deleting the student');\n      }\n    }\n  };\n\n  const handleFormSubmit = async () => {\n    if (!currentStudent) return;\n\n    // Update the classes array with selected classes\n    const studentData = {\n      ...currentStudent,\n      classes: selectedClasses\n    };\n\n    try {\n      if (isNew) {\n        // Create new student\n        const newStudent = await studentsApi.create(studentData as Omit<Student, 'id'>);\n        setStudents([...students, newStudent]);\n      } else {\n        // Update existing student\n        const updatedStudent = await studentsApi.update(studentData.id!, studentData);\n        if (updatedStudent) {\n          setStudents(students.map(s => s.id === updatedStudent.id ? updatedStudent : s));\n        }\n      }\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error saving student:', error);\n      alert('Error saving the student');\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setCurrentStudent(prev => {\n      if (name === 'enrollmentDate') {\n        return { ...prev, [name]: new Date(value) };\n      }\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleClassToggle = (classId: number) => {\n    if (selectedClasses.includes(classId)) {\n      setSelectedClasses(selectedClasses.filter(id => id !== classId));\n    } else {\n      setSelectedClasses([...selectedClasses, classId]);\n    }\n  };\n\n  if (loading) {\n    return <Typography>Loading students data...</Typography>;\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Students Management\n        </Typography>\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          startIcon={<AddIcon />} \n          onClick={handleAddStudent}\n        >\n          Add Student\n        </Button>\n      </Box>\n\n      <Paper>\n        <DataGrid\n          rows={students}\n          columns={columns}\n        >\n          <SortingState defaultSorting={[{ columnName: 'lastName', direction: 'asc' }]} />\n          <IntegratedSorting />\n          <PagingState defaultCurrentPage={0} pageSize={10} />\n          <IntegratedPaging />\n          <DateTypeProvider for={dateColumns} />\n          <ClassesTypeProvider for={classesColumns} classes={classes} />\n          <Table />\n          <TableHeaderRow showSortingControls />\n          <TableEditColumn\n            showEditCommand\n            showDeleteCommand\n            commandComponent={({ id, onExecute }) => {\n              const handleClick = () => {\n                if (id === 'edit') {\n                  const rowId = onExecute() as any;\n                  handleEditStudent(rowId);\n                } else if (id === 'delete') {\n                  const rowId = onExecute() as any;\n                  handleDeleteStudent(rowId);\n                }\n              };\n              \n              return (\n                <Button\n                  size=\"small\"\n                  color={id === 'delete' ? 'error' : 'primary'}\n                  onClick={handleClick}\n                  startIcon={id === 'edit' ? <EditIcon /> : <DeleteIcon />}\n                >\n                  {id === 'edit' ? 'Edit' : 'Delete'}\n                </Button>\n              );\n            }}\n          />\n          <PagingPanel />\n        </DataGrid>\n      </Paper>\n\n      {/* Add/Edit Dialog */}\n      <Dialog open={showForm} onClose={() => setShowForm(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>{isNew ? 'Add New Student' : 'Edit Student'}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"First Name\"\n                name=\"firstName\"\n                value={currentStudent?.firstName || ''}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={currentStudent?.lastName || ''}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={currentStudent?.email || ''}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Phone\"\n                name=\"phone\"\n                value={currentStudent?.phone || ''}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Enrollment Date\"\n                name=\"enrollmentDate\"\n                type=\"date\"\n                value={currentStudent?.enrollmentDate \n                  ? new Date(currentStudent.enrollmentDate).toISOString().slice(0, 10) \n                  : ''}\n                onChange={handleInputChange}\n                InputLabelProps={{ shrink: true }}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Enrolled Classes\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                {classes.map((classItem) => (\n                  <Chip\n                    key={classItem.id}\n                    label={classItem.name}\n                    color={selectedClasses.includes(classItem.id) ? 'primary' : 'default'}\n                    onClick={() => handleClassToggle(classItem.id)}\n                    sx={{ margin: 0.5 }}\n                  />\n                ))}\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowForm(false)}>Cancel</Button>\n          <Button \n            onClick={handleFormSubmit} \n            variant=\"contained\" \n            color=\"primary\"\n            disabled={!currentStudent?.firstName || !currentStudent?.lastName || !currentStudent?.email}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default StudentsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}